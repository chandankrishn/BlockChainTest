{"version":3,"sources":["MageLogo.jpg","App.js","reportWebVitals.js","index.js"],"names":["LogoutButton","useMoralis","logout","isAuthenticating","display","colorScheme","variant","isLoading","onClick","disabled","App","authenticate","isWeb3Enabled","isAuthenticated","user","enableWeb3","a","provider","chainId","signingMessage","console","log","Moralis","useEffect","document","addEventListener","visibilityState","window","localStorage","removeItem","p","className","width","height","src","logo","alt","as","size","maxW","authWalletConnect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","config","initialColorMode","ReactDOM","render","StrictMode","appId","serverUrl","getElementById"],"mappings":"2UAAe,MAA0B,qC,4ECOnCA,EAAe,WAAO,IAAD,EACYC,cAA7BC,EADiB,EACjBA,OAAQC,EADS,EACTA,iBAEhB,OACE,cAAC,IAAD,CACEC,QAAS,QACTC,YAAY,MACZC,QAAQ,QACRC,UAAWJ,EACXK,QAAS,kBAAMN,KACfO,SAAUN,EANZ,qBAyGWO,MA5Ff,WAAgB,IAAD,EAQTT,cANFU,EAFW,EAEXA,aACAC,EAHW,EAGXA,cACAC,EAJW,EAIXA,gBACAC,EALW,EAKXA,KACAC,EANW,EAMXA,WANW,4CAUb,4BAAAC,EAAA,sDACQF,EAAOH,EAAa,CACxBM,SAAU,gBACVC,QAAS,GASTC,eAAgB,aAElBC,QAAQC,IAAIP,GAdd,4CAVa,sBAyCb,OAzCa,EAOXQ,QAoBFC,qBAAU,YACHX,GAAiBC,IACpBE,EAAW,CAAEE,SAAU,gBAAiBC,QAAS,KACjDE,QAAQC,IAAI,qBAEb,CAACT,EAAeC,EAAiBE,IAEpCS,SAASC,iBAAiB,oBAAoB,WACX,WAA7BD,SAASE,iBACXC,OAAOC,aAAaC,WAAW,oCAK9BhB,GAAoBC,EAoCvB,eAAC,IAAD,CAAKV,QAAS,QAAS0B,EAAG,GAAIC,UAAU,MAAxC,UACE,cAAC,EAAD,IACA,cAAC,IAAD,UACE,qBAAKC,MAAO,IAAKC,OAAQ,IAAKC,IAAKC,EAAMC,IAAI,WAG/C,cAAC,IAAD,UACE,cAAC,IAAD,CAASC,GAAG,KAAKC,KAAK,MAAMR,EAAG,GAA/B,oCA1CJV,QAAQC,IAAIP,GAEV,eAAC,IAAD,CAAWyB,KAAK,eAAhB,UACE,cAAC,IAAD,UACE,qBAAKP,MAAO,IAAKC,OAAQ,IAAKC,IAAKC,EAAMC,IAAI,WAE/C,uBACA,cAAC,IAAD,UACE,cAAC,IAAD,CAASC,GAAG,KAAKC,KAAK,MAAMR,EAAG,GAA/B,qCAIF,cAAC,IAAD,UACE,cAAC,IAAD,CACEzB,YAAY,QACZiC,KAAK,KACL9B,QAAS,kBAAMG,EAAa,CAAEQ,eAAgB,mBAHhD,sCAOF,uBACA,cAAC,IAAD,UACE,cAAC,IAAD,CACEd,YAAY,QACZiC,KAAK,KACL9B,QAAS,kBAnEN,0CAmEYgC,IAHjB,4CAOF,4BCnFOC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,oBCCRQ,EAAQC,YAAY,CACxBC,OAAQ,CACNC,iBAAkB,WAOtBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAiBC,MALA,2CAKqBC,UAJjB,oDAIrB,SACE,cAAC,IAAD,CAAgBR,MAAOA,EAAvB,SACE,cAAC,EAAD,UAIN1B,SAASmC,eAAe,SAM1BlB,K","file":"static/js/main.9df07e56.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/MageLogo.a64d8b86.jpg\";","import logo from \"./MageLogo.jpg\";\nimport React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport { useMoralis } from \"react-moralis\";\nimport { Button, Box, Heading } from \"@chakra-ui/react\";\nimport { Container, Center } from \"@chakra-ui/react\";\n\nconst LogoutButton = () => {\n  const { logout, isAuthenticating } = useMoralis();\n\n  return (\n    <Button\n      display={\"block\"}\n      colorScheme=\"red\"\n      variant=\"solid\"\n      isLoading={isAuthenticating}\n      onClick={() => logout()}\n      disabled={isAuthenticating}>\n      Logout\n    </Button>\n  );\n};\n\n// ---------- APP -------------\nfunction App() {\n  const {\n    authenticate,\n    isWeb3Enabled,\n    isAuthenticated,\n    user,\n    enableWeb3,\n    Moralis,\n  } = useMoralis();\n\n  async function authWalletConnect() {\n    const user = authenticate({\n      provider: \"walletconnect\",\n      chainId: 56,\n      // mobileLinks: [\n      //   \"metamask\",\n      //   \"trust\",\n      //   \"rainbow\",\n      //   \"argent\",\n      //   \"imtoken\",\n      //   \"pillar\",\n      // ],\n      signingMessage: \"Welcome!\",\n    });\n    console.log(user);\n  }\n\n  useEffect(() => {\n    if (!isWeb3Enabled && isAuthenticated) {\n      enableWeb3({ provider: \"walletconnect\", chainId: 56 });\n      console.log(\"web3 activated\");\n    }\n  }, [isWeb3Enabled, isAuthenticated, enableWeb3]);\n\n  document.addEventListener(\"visibilitychange\", () => {\n    if (document.visibilityState === \"hidden\") {\n      window.localStorage.removeItem(\"WALLETCONNECT_DEEPLINK_CHOICE\");\n    }\n  });\n\n  // ----- Authenticate in Metamask---------\n  if (!isAuthenticated && !user) {\n    console.log(user);\n    return (\n      <Container maxW=\"container.lg\">\n        <Center>\n          <img width={500} height={500} src={logo} alt=\"logo\" />\n        </Center>\n        <br />\n        <Center>\n          <Heading as=\"h2\" size=\"3xl\" p={10}>\n            Wallet authentication\n          </Heading>\n        </Center>\n        <Center>\n          <Button\n            colorScheme=\"green\"\n            size=\"lg\"\n            onClick={() => authenticate({ signingMessage: \"Hello youtube\" })}>\n            Sign in using Metamask\n          </Button>\n        </Center>\n        <br />\n        <Center>\n          <Button\n            colorScheme=\"green\"\n            size=\"lg\"\n            onClick={() => authWalletConnect()}>\n            Sign in using Wallet Connect\n          </Button>\n        </Center>\n        <br />\n      </Container>\n    );\n  }\n\n  return (\n    <Box display={\"block\"} p={35} className=\"App\">\n      <LogoutButton />\n      <Center>\n        <img width={500} height={500} src={logo} alt=\"logo\" />\n      </Center>\n\n      <Center>\n        <Heading as=\"h2\" size=\"3xl\" p={10}>\n          Wallet Logged in\n        </Heading>\n      </Center>\n    </Box>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { MoralisProvider } from \"react-moralis\";\nimport { ChakraProvider, extendTheme } from \"@chakra-ui/react\";\n\nconst theme = extendTheme({\n  config: {\n    initialColorMode: \"light\",\n  },\n});\n\nconst moralisAppId = \"77IfzDQc5dLFD3YbNKeuNrxHGe2c5OWGoMxgfLTU\";\nconst moralisServerURL = \"https://ioc7ccqovdu5.grandmoralis.com:2053/server\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <MoralisProvider appId={moralisAppId} serverUrl={moralisServerURL}>\n      <ChakraProvider theme={theme}>\n        <App />\n      </ChakraProvider>\n    </MoralisProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}